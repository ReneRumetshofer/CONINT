name: Frontend Pipeline

on:
  push:
    paths:
      - 'frontend/**'
    branches:
      - main
  pull_request:
    paths:
      - 'frontend/**'
    branches:
      - main

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/frontend
  WORKDIR: frontend

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKDIR }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: '18'

      - run: npm ci
      - run: npx eslint . || true

      - name: Snyk Scan
        uses: snyk/actions/node@master
        with:
          command: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          args: >
            -Dsonar.projectKey=${{ github.repository }}-frontend
            -Dsonar.sources=.
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - run: npm run test -- --coverage

  build-and-push:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        run: |
          docker build -t $IMAGE_NAME:${{ github.sha }} ./frontend
          docker push $IMAGE_NAME:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v3
      - run: ./scripts/deploy-staging.sh frontend $IMAGE_NAME:${{ github.sha }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  e2e-perf:
    runs-on: ubuntu-latest
    needs: deploy
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npx playwright install && npx playwright test
      - uses: grafana/k6-action@v0.2.0
        with:
          filename: frontend/load-test.js
      - run: ./scripts/switch-green-live.sh frontend
